"""
<그림 1>과 같이 9x9 격자판에 쓰여진 81개의 자연수 또는 0이 주어질 때, 
이들 중 최댓값을 찾고 그 최댓값이 몇 행 몇 열에 위치한 수인지 구하는 프로그램을 작성하시오.
예를 들어, 다음과 같이 81개의 수가 주어지면
 	1열	2열	3열	4열	5열	6열	7열	8열	9열
1행	3	23	85	34	17	74	25	52	65
2행	10	7	39	42	88	52	14	72	63
3행	87	42	18	78	53	45	18	84	53
4행	34	28	64	85	12	16	75	36	55
5행	21	77	45	35	28	75	90	76	1
6행	25	87	65	15	28	11	37	28	74
7행	65	27	75	41	7	89	78	64	39
8행	47	47	70	45	23	65	3	41	44
9행	87	13	82	38	31	12	29	29	80

이들 중 최댓값은 90이고, 이 값은 5행 7열에 위치한다.

"""


def main():
    dimension = [list(map(int, input().split(" "))) for n in range(9)]

    max_value = max_row = max_col = 0

    for i in range(9):
        for j in range(9):
            if dimension[i][j] > max_value:
                max_value = dimension[i][j]
                max_row = i + 1
                max_col = j + 1
    print(max_value)
    print(max_row,end=" ")
    print(max_col)

if __name__ =="__main__":
    main()

# 먼저 list() 함수를 통해서 1차원 배열 선언 후 반복문을 통해 각 요소에 배열을 삽입하여 2차원 배열로 변환
# max 함수를 이용해 값을 찾은 후, 해당 값과 일치할때 까지 반복문을 통해 검색
# 1차원 배열로 초기에 선언해서 그런지 max 함수를 이용하면 열이 전체 나옴
# 초기 값을 먼저 max_value 로 설정후 인자 값을 하나씩 비교 수행
